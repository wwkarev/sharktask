# Generated by Django 4.2.4 on 2023-08-26 07:51

from django.db import migrations
from django.db.migrations import RunPython

select_config_schema = {
    "type": "object",
    "required": ["options"],
    "properties": {
        "options": {
            "type": "array",
            "items": {
                "type": "object",
                "required": ["id", "name"],
                "properties": {"id": {"type": "integer"}, "name": {"type": "string"}},
            },
        }
    },
}

integer_value_schema = {"type": "object", "required": ["value"], "properties": {"value": {"type": "integer"}}}

string_value_schema = {"type": "object", "required": ["value"], "properties": {"value": {"type": "string"}}}

select_value_schema = {"type": "object", "required": ["value"], "properties": {"value": {"type": "integer"}}}

multi_select_value_schema = {
    "type": "object",
    "required": ["values"],
    "values": {"type": "array", "items": {"type": "integer"}},
}

user_picker_value_schema = {"type": "object", "required": ["value"], "properties": {"value": {"type": "integer"}}}

field_type_info_list = [
    {"key": "integer", "config_schema": None, "value_schema": integer_value_schema},
    {"key": "string", "config_schema": None, "value_schema": string_value_schema},
    {"key": "text", "config_schema": None, "value_schema": string_value_schema},
    {"key": "select", "config_schema": select_config_schema, "value_schema": select_value_schema},
    {"key": "multi_select", "config_schema": select_config_schema, "value_schema": multi_select_value_schema},
    {"key": "user_picker", "config_schema": None, "value_schema": user_picker_value_schema},
]


def create_basic_field_types(apps, schema_editor):
    FieldType = apps.get_model("shark_task_fields", "FieldType")
    for field_type_info in field_type_info_list:
        FieldType.objects.create(
            key=field_type_info["key"],
            config_schema=field_type_info["config_schema"],
            value_schema=field_type_info["value_schema"],
        )


field_info_list = [
    {
        "key": "description",
        "name": "Description",
        "field_type_key": "text",
    },
    {
        "key": "reporter",
        "name": "Reporter",
        "field_type_key": "user_picker",
    },
    {
        "key": "assignee",
        "name": "Assignee",
        "field_type_key": "user_picker",
    },
]


def create_basic_fields(apps, schema_editor):
    FieldType = apps.get_model("shark_task_fields", "FieldType")
    Field = apps.get_model("shark_task_fields", "Field")
    for field_info in field_info_list:
        field_type = FieldType.objects.get(key=field_info["field_type_key"])
        Field.objects.create(key=field_info["key"], name=field_info["name"], field_type=field_type)


class Migration(migrations.Migration):

    dependencies = [
        ("shark_task_fields", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(
            create_basic_field_types,
            reverse_code=RunPython.noop,
            elidable=True,
        ),
        migrations.RunPython(
            create_basic_fields,
            reverse_code=RunPython.noop,
            elidable=True,
        ),
    ]
